// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Pagination Native renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <View
    onLayout={[Function]}
    style={
        Object {
            "alignItems": "stretch",
            "flexDirection": "column",
          }
    }
>
    <View
        style={
            Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "height": 40,
                  "justifyContent": "space-between",
                },
                Object {
                  "justifyContent": "center",
                },
                null,
              ]
        }
    >
        <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
                Array [
                    Object {
                      "color": "#696969",
                      "fontFamily": "GillSansMTStd-Medium",
                      "fontSize": 15,
                    },
                  ]
            }
        >
            Showing 1 - 20 of 21 results
        </Text>
    </View>
    <View
        style={
            Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "height": 40,
                  "justifyContent": "space-between",
                },
                Object {
                  "borderBottomColor": "#dbdbdb",
                  "borderBottomWidth": 1,
                  "borderStyle": "solid",
                  "borderTopColor": "#dbdbdb",
                  "borderTopWidth": 1,
                },
              ]
        }
    >
        <View />
        <View>
            <Link
                onPress={[Function]}
                style={
                    Object {
                        "color": "#006699",
                        "fontFamily": "GillSansMTStd-Medium",
                        "fontSize": 14,
                      }
                }
                url="./2"
            >
                <NextPageIcon
                    label="Next"
                />
            </Link>
        </View>
    </View>
</View>,
  "nodes": Array [
    <View
      onLayout={[Function]}
      style={
            Object {
                  "alignItems": "stretch",
                  "flexDirection": "column",
                }
      }
>
      <View
            style={
                  Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "height": 40,
                          "justifyContent": "space-between",
                        },
                        Object {
                          "justifyContent": "center",
                        },
                        null,
                      ]
            }
      >
            <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                        Array [
                              Object {
                                "color": "#696969",
                                "fontFamily": "GillSansMTStd-Medium",
                                "fontSize": 15,
                              },
                            ]
                  }
            >
                  Showing 1 - 20 of 21 results
            </Text>
      </View>
      <View
            style={
                  Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "height": 40,
                          "justifyContent": "space-between",
                        },
                        Object {
                          "borderBottomColor": "#dbdbdb",
                          "borderBottomWidth": 1,
                          "borderStyle": "solid",
                          "borderTopColor": "#dbdbdb",
                          "borderTopWidth": 1,
                        },
                      ]
            }
      >
            <View />
            <View>
                  <Link
                        onPress={[Function]}
                        style={
                              Object {
                                    "color": "#006699",
                                    "fontFamily": "GillSansMTStd-Medium",
                                    "fontSize": 14,
                                  }
                        }
                        url="./2"
                  >
                        <NextPageIcon
                              label="Next"
                        />
                  </Link>
            </View>
      </View>
</View>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Pagination
        count={21}
        generatePageLink={[Function]}
        hideResults={false}
        onNext={[Function]}
        onPrev={[Function]}
        page={1}
        pageSize={20}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Pagination {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "handleLayout": [Function],
        "props": Object {
          "count": 21,
          "generatePageLink": [Function],
          "hideResults": false,
          "onNext": [Function],
          "onPrev": [Function],
          "page": 1,
          "pageSize": 20,
        },
        "refs": Object {},
        "state": Object {
          "absolutePosition": false,
          "count": 21,
          "generatePageLink": [Function],
          "hideResults": false,
          "onNext": [Function],
          "onPrev": [Function],
          "page": 1,
          "pageSize": 20,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <View
          onLayout={[Function]}
          style={
                    Object {
                              "alignItems": "stretch",
                              "flexDirection": "column",
                            }
          }
>
          <View
                    style={
                              Array [
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "height": 40,
                                          "justifyContent": "space-between",
                                        },
                                        Object {
                                          "justifyContent": "center",
                                        },
                                        null,
                                      ]
                    }
          >
                    <Text
                              accessible={true}
                              allowFontScaling={true}
                              ellipsizeMode="tail"
                              style={
                                        Array [
                                                  Object {
                                                    "color": "#696969",
                                                    "fontFamily": "GillSansMTStd-Medium",
                                                    "fontSize": 15,
                                                  },
                                                ]
                              }
                    >
                              Showing 1 - 20 of 21 results
                    </Text>
          </View>
          <View
                    style={
                              Array [
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "height": 40,
                                          "justifyContent": "space-between",
                                        },
                                        Object {
                                          "borderBottomColor": "#dbdbdb",
                                          "borderBottomWidth": 1,
                                          "borderStyle": "solid",
                                          "borderTopColor": "#dbdbdb",
                                          "borderTopWidth": 1,
                                        },
                                      ]
                    }
          >
                    <View />
                    <View>
                              <Link
                                        onPress={[Function]}
                                        style={
                                                  Object {
                                                            "color": "#006699",
                                                            "fontFamily": "GillSansMTStd-Medium",
                                                            "fontSize": 14,
                                                          }
                                        }
                                        url="./2"
                              >
                                        <NextPageIcon
                                                  label="Next"
                                        />
                              </Link>
                    </View>
          </View>
</View>,
        "_debugID": 2,
        "_renderedOutput": <View
          onLayout={[Function]}
          style={
                    Object {
                              "alignItems": "stretch",
                              "flexDirection": "column",
                            }
          }
>
          <View
                    style={
                              Array [
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "height": 40,
                                          "justifyContent": "space-between",
                                        },
                                        Object {
                                          "justifyContent": "center",
                                        },
                                        null,
                                      ]
                    }
          >
                    <Text
                              accessible={true}
                              allowFontScaling={true}
                              ellipsizeMode="tail"
                              style={
                                        Array [
                                                  Object {
                                                    "color": "#696969",
                                                    "fontFamily": "GillSansMTStd-Medium",
                                                    "fontSize": 15,
                                                  },
                                                ]
                              }
                    >
                              Showing 1 - 20 of 21 results
                    </Text>
          </View>
          <View
                    style={
                              Array [
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "height": 40,
                                          "justifyContent": "space-between",
                                        },
                                        Object {
                                          "borderBottomColor": "#dbdbdb",
                                          "borderBottomWidth": 1,
                                          "borderStyle": "solid",
                                          "borderTopColor": "#dbdbdb",
                                          "borderTopWidth": 1,
                                        },
                                      ]
                    }
          >
                    <View />
                    <View>
                              <Link
                                        onPress={[Function]}
                                        style={
                                                  Object {
                                                            "color": "#006699",
                                                            "fontFamily": "GillSansMTStd-Medium",
                                                            "fontSize": 14,
                                                          }
                                        }
                                        url="./2"
                              >
                                        <NextPageIcon
                                                  label="Next"
                                        />
                              </Link>
                    </View>
          </View>
</View>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Pagination
    count={21}
    generatePageLink={[Function]}
    hideResults={false}
    onNext={[Function]}
    onPrev={[Function]}
    page={1}
    pageSize={20}
/>,
}
`;

exports[`Pagination Native renders prev and next link 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <View
    onLayout={[Function]}
    style={
        Object {
            "alignItems": "stretch",
            "flexDirection": "column",
          }
    }
>
    <View
        style={
            Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "height": 40,
                  "justifyContent": "space-between",
                },
                Object {
                  "justifyContent": "center",
                },
                null,
              ]
        }
    >
        <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
                Array [
                    Object {
                      "color": "#696969",
                      "fontFamily": "GillSansMTStd-Medium",
                      "fontSize": 15,
                    },
                  ]
            }
        >
            Showing 21 - 40 of 41 results
        </Text>
    </View>
    <View
        style={
            Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "height": 40,
                  "justifyContent": "space-between",
                },
                Object {
                  "borderBottomColor": "#dbdbdb",
                  "borderBottomWidth": 1,
                  "borderStyle": "solid",
                  "borderTopColor": "#dbdbdb",
                  "borderTopWidth": 1,
                },
              ]
        }
    >
        <View>
            <Link
                onPress={[Function]}
                style={
                    Object {
                        "color": "#006699",
                        "fontFamily": "GillSansMTStd-Medium",
                        "fontSize": 14,
                      }
                }
                url="./1"
            >
                <PreviousPageIcon
                    label="Previous"
                />
            </Link>
        </View>
        <View>
            <Link
                onPress={[Function]}
                style={
                    Object {
                        "color": "#006699",
                        "fontFamily": "GillSansMTStd-Medium",
                        "fontSize": 14,
                      }
                }
                url="./3"
            >
                <NextPageIcon
                    label="Next"
                />
            </Link>
        </View>
    </View>
</View>,
  "nodes": Array [
    <View
      onLayout={[Function]}
      style={
            Object {
                  "alignItems": "stretch",
                  "flexDirection": "column",
                }
      }
>
      <View
            style={
                  Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "height": 40,
                          "justifyContent": "space-between",
                        },
                        Object {
                          "justifyContent": "center",
                        },
                        null,
                      ]
            }
      >
            <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                        Array [
                              Object {
                                "color": "#696969",
                                "fontFamily": "GillSansMTStd-Medium",
                                "fontSize": 15,
                              },
                            ]
                  }
            >
                  Showing 21 - 40 of 41 results
            </Text>
      </View>
      <View
            style={
                  Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "height": 40,
                          "justifyContent": "space-between",
                        },
                        Object {
                          "borderBottomColor": "#dbdbdb",
                          "borderBottomWidth": 1,
                          "borderStyle": "solid",
                          "borderTopColor": "#dbdbdb",
                          "borderTopWidth": 1,
                        },
                      ]
            }
      >
            <View>
                  <Link
                        onPress={[Function]}
                        style={
                              Object {
                                    "color": "#006699",
                                    "fontFamily": "GillSansMTStd-Medium",
                                    "fontSize": 14,
                                  }
                        }
                        url="./1"
                  >
                        <PreviousPageIcon
                              label="Previous"
                        />
                  </Link>
            </View>
            <View>
                  <Link
                        onPress={[Function]}
                        style={
                              Object {
                                    "color": "#006699",
                                    "fontFamily": "GillSansMTStd-Medium",
                                    "fontSize": 14,
                                  }
                        }
                        url="./3"
                  >
                        <NextPageIcon
                              label="Next"
                        />
                  </Link>
            </View>
      </View>
</View>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Pagination
        count={41}
        generatePageLink={[Function]}
        hideResults={false}
        onNext={[Function]}
        onPrev={[Function]}
        page={2}
        pageSize={20}
/>,
      "_debugID": 7,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Pagination {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "handleLayout": [Function],
        "props": Object {
          "count": 41,
          "generatePageLink": [Function],
          "hideResults": false,
          "onNext": [Function],
          "onPrev": [Function],
          "page": 2,
          "pageSize": 20,
        },
        "refs": Object {},
        "state": Object {
          "absolutePosition": false,
          "count": 41,
          "generatePageLink": [Function],
          "hideResults": false,
          "onNext": [Function],
          "onPrev": [Function],
          "page": 2,
          "pageSize": 20,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 4,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <View
          onLayout={[Function]}
          style={
                    Object {
                              "alignItems": "stretch",
                              "flexDirection": "column",
                            }
          }
>
          <View
                    style={
                              Array [
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "height": 40,
                                          "justifyContent": "space-between",
                                        },
                                        Object {
                                          "justifyContent": "center",
                                        },
                                        null,
                                      ]
                    }
          >
                    <Text
                              accessible={true}
                              allowFontScaling={true}
                              ellipsizeMode="tail"
                              style={
                                        Array [
                                                  Object {
                                                    "color": "#696969",
                                                    "fontFamily": "GillSansMTStd-Medium",
                                                    "fontSize": 15,
                                                  },
                                                ]
                              }
                    >
                              Showing 21 - 40 of 41 results
                    </Text>
          </View>
          <View
                    style={
                              Array [
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "height": 40,
                                          "justifyContent": "space-between",
                                        },
                                        Object {
                                          "borderBottomColor": "#dbdbdb",
                                          "borderBottomWidth": 1,
                                          "borderStyle": "solid",
                                          "borderTopColor": "#dbdbdb",
                                          "borderTopWidth": 1,
                                        },
                                      ]
                    }
          >
                    <View>
                              <Link
                                        onPress={[Function]}
                                        style={
                                                  Object {
                                                            "color": "#006699",
                                                            "fontFamily": "GillSansMTStd-Medium",
                                                            "fontSize": 14,
                                                          }
                                        }
                                        url="./1"
                              >
                                        <PreviousPageIcon
                                                  label="Previous"
                                        />
                              </Link>
                    </View>
                    <View>
                              <Link
                                        onPress={[Function]}
                                        style={
                                                  Object {
                                                            "color": "#006699",
                                                            "fontFamily": "GillSansMTStd-Medium",
                                                            "fontSize": 14,
                                                          }
                                        }
                                        url="./3"
                              >
                                        <NextPageIcon
                                                  label="Next"
                                        />
                              </Link>
                    </View>
          </View>
</View>,
        "_debugID": 8,
        "_renderedOutput": <View
          onLayout={[Function]}
          style={
                    Object {
                              "alignItems": "stretch",
                              "flexDirection": "column",
                            }
          }
>
          <View
                    style={
                              Array [
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "height": 40,
                                          "justifyContent": "space-between",
                                        },
                                        Object {
                                          "justifyContent": "center",
                                        },
                                        null,
                                      ]
                    }
          >
                    <Text
                              accessible={true}
                              allowFontScaling={true}
                              ellipsizeMode="tail"
                              style={
                                        Array [
                                                  Object {
                                                    "color": "#696969",
                                                    "fontFamily": "GillSansMTStd-Medium",
                                                    "fontSize": 15,
                                                  },
                                                ]
                              }
                    >
                              Showing 21 - 40 of 41 results
                    </Text>
          </View>
          <View
                    style={
                              Array [
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "height": 40,
                                          "justifyContent": "space-between",
                                        },
                                        Object {
                                          "borderBottomColor": "#dbdbdb",
                                          "borderBottomWidth": 1,
                                          "borderStyle": "solid",
                                          "borderTopColor": "#dbdbdb",
                                          "borderTopWidth": 1,
                                        },
                                      ]
                    }
          >
                    <View>
                              <Link
                                        onPress={[Function]}
                                        style={
                                                  Object {
                                                            "color": "#006699",
                                                            "fontFamily": "GillSansMTStd-Medium",
                                                            "fontSize": 14,
                                                          }
                                        }
                                        url="./1"
                              >
                                        <PreviousPageIcon
                                                  label="Previous"
                                        />
                              </Link>
                    </View>
                    <View>
                              <Link
                                        onPress={[Function]}
                                        style={
                                                  Object {
                                                            "color": "#006699",
                                                            "fontFamily": "GillSansMTStd-Medium",
                                                            "fontSize": 14,
                                                          }
                                        }
                                        url="./3"
                              >
                                        <NextPageIcon
                                                  label="Next"
                                        />
                              </Link>
                    </View>
          </View>
</View>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Pagination
    count={41}
    generatePageLink={[Function]}
    hideResults={false}
    onNext={[Function]}
    onPrev={[Function]}
    page={2}
    pageSize={20}
/>,
}
`;

exports[`Pagination Native renders prev link 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <View
    onLayout={[Function]}
    style={
        Object {
            "alignItems": "stretch",
            "flexDirection": "column",
          }
    }
>
    <View
        style={
            Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "height": 40,
                  "justifyContent": "space-between",
                },
                Object {
                  "justifyContent": "center",
                },
                null,
              ]
        }
    >
        <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
                Array [
                    Object {
                      "color": "#696969",
                      "fontFamily": "GillSansMTStd-Medium",
                      "fontSize": 15,
                    },
                  ]
            }
        >
            Showing 41 - 41 of 41 results
        </Text>
    </View>
    <View
        style={
            Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "height": 40,
                  "justifyContent": "space-between",
                },
                Object {
                  "borderBottomColor": "#dbdbdb",
                  "borderBottomWidth": 1,
                  "borderStyle": "solid",
                  "borderTopColor": "#dbdbdb",
                  "borderTopWidth": 1,
                },
              ]
        }
    >
        <View>
            <Link
                onPress={[Function]}
                style={
                    Object {
                        "color": "#006699",
                        "fontFamily": "GillSansMTStd-Medium",
                        "fontSize": 14,
                      }
                }
                url="./2"
            >
                <PreviousPageIcon
                    label="Previous"
                />
            </Link>
        </View>
        <View />
    </View>
</View>,
  "nodes": Array [
    <View
      onLayout={[Function]}
      style={
            Object {
                  "alignItems": "stretch",
                  "flexDirection": "column",
                }
      }
>
      <View
            style={
                  Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "height": 40,
                          "justifyContent": "space-between",
                        },
                        Object {
                          "justifyContent": "center",
                        },
                        null,
                      ]
            }
      >
            <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                        Array [
                              Object {
                                "color": "#696969",
                                "fontFamily": "GillSansMTStd-Medium",
                                "fontSize": 15,
                              },
                            ]
                  }
            >
                  Showing 41 - 41 of 41 results
            </Text>
      </View>
      <View
            style={
                  Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "height": 40,
                          "justifyContent": "space-between",
                        },
                        Object {
                          "borderBottomColor": "#dbdbdb",
                          "borderBottomWidth": 1,
                          "borderStyle": "solid",
                          "borderTopColor": "#dbdbdb",
                          "borderTopWidth": 1,
                        },
                      ]
            }
      >
            <View>
                  <Link
                        onPress={[Function]}
                        style={
                              Object {
                                    "color": "#006699",
                                    "fontFamily": "GillSansMTStd-Medium",
                                    "fontSize": 14,
                                  }
                        }
                        url="./2"
                  >
                        <PreviousPageIcon
                              label="Previous"
                        />
                  </Link>
            </View>
            <View />
      </View>
</View>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Pagination
        count={41}
        generatePageLink={[Function]}
        hideResults={false}
        onNext={[Function]}
        onPrev={[Function]}
        page={3}
        pageSize={20}
/>,
      "_debugID": 5,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Pagination {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "handleLayout": [Function],
        "props": Object {
          "count": 41,
          "generatePageLink": [Function],
          "hideResults": false,
          "onNext": [Function],
          "onPrev": [Function],
          "page": 3,
          "pageSize": 20,
        },
        "refs": Object {},
        "state": Object {
          "absolutePosition": false,
          "count": 41,
          "generatePageLink": [Function],
          "hideResults": false,
          "onNext": [Function],
          "onPrev": [Function],
          "page": 3,
          "pageSize": 20,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 3,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <View
          onLayout={[Function]}
          style={
                    Object {
                              "alignItems": "stretch",
                              "flexDirection": "column",
                            }
          }
>
          <View
                    style={
                              Array [
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "height": 40,
                                          "justifyContent": "space-between",
                                        },
                                        Object {
                                          "justifyContent": "center",
                                        },
                                        null,
                                      ]
                    }
          >
                    <Text
                              accessible={true}
                              allowFontScaling={true}
                              ellipsizeMode="tail"
                              style={
                                        Array [
                                                  Object {
                                                    "color": "#696969",
                                                    "fontFamily": "GillSansMTStd-Medium",
                                                    "fontSize": 15,
                                                  },
                                                ]
                              }
                    >
                              Showing 41 - 41 of 41 results
                    </Text>
          </View>
          <View
                    style={
                              Array [
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "height": 40,
                                          "justifyContent": "space-between",
                                        },
                                        Object {
                                          "borderBottomColor": "#dbdbdb",
                                          "borderBottomWidth": 1,
                                          "borderStyle": "solid",
                                          "borderTopColor": "#dbdbdb",
                                          "borderTopWidth": 1,
                                        },
                                      ]
                    }
          >
                    <View>
                              <Link
                                        onPress={[Function]}
                                        style={
                                                  Object {
                                                            "color": "#006699",
                                                            "fontFamily": "GillSansMTStd-Medium",
                                                            "fontSize": 14,
                                                          }
                                        }
                                        url="./2"
                              >
                                        <PreviousPageIcon
                                                  label="Previous"
                                        />
                              </Link>
                    </View>
                    <View />
          </View>
</View>,
        "_debugID": 6,
        "_renderedOutput": <View
          onLayout={[Function]}
          style={
                    Object {
                              "alignItems": "stretch",
                              "flexDirection": "column",
                            }
          }
>
          <View
                    style={
                              Array [
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "height": 40,
                                          "justifyContent": "space-between",
                                        },
                                        Object {
                                          "justifyContent": "center",
                                        },
                                        null,
                                      ]
                    }
          >
                    <Text
                              accessible={true}
                              allowFontScaling={true}
                              ellipsizeMode="tail"
                              style={
                                        Array [
                                                  Object {
                                                    "color": "#696969",
                                                    "fontFamily": "GillSansMTStd-Medium",
                                                    "fontSize": 15,
                                                  },
                                                ]
                              }
                    >
                              Showing 41 - 41 of 41 results
                    </Text>
          </View>
          <View
                    style={
                              Array [
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "height": 40,
                                          "justifyContent": "space-between",
                                        },
                                        Object {
                                          "borderBottomColor": "#dbdbdb",
                                          "borderBottomWidth": 1,
                                          "borderStyle": "solid",
                                          "borderTopColor": "#dbdbdb",
                                          "borderTopWidth": 1,
                                        },
                                      ]
                    }
          >
                    <View>
                              <Link
                                        onPress={[Function]}
                                        style={
                                                  Object {
                                                            "color": "#006699",
                                                            "fontFamily": "GillSansMTStd-Medium",
                                                            "fontSize": 14,
                                                          }
                                        }
                                        url="./2"
                              >
                                        <PreviousPageIcon
                                                  label="Previous"
                                        />
                              </Link>
                    </View>
                    <View />
          </View>
</View>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Pagination
    count={41}
    generatePageLink={[Function]}
    hideResults={false}
    onNext={[Function]}
    onPrev={[Function]}
    page={3}
    pageSize={20}
/>,
}
`;

exports[`Pagination Native renders prev link 2`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <View
    onLayout={[Function]}
    style={
        Object {
            "alignItems": "stretch",
            "flexDirection": "column",
          }
    }
>
    <View
        style={
            Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "height": 40,
                  "justifyContent": "space-between",
                },
                Object {
                  "justifyContent": "center",
                },
                null,
              ]
        }
    >
        <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
                Array [
                    Object {
                      "color": "#696969",
                      "fontFamily": "GillSansMTStd-Medium",
                      "fontSize": 15,
                    },
                  ]
            }
        >
            Showing 1 - 20 of 41 results
        </Text>
    </View>
    <View
        style={
            Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "height": 40,
                  "justifyContent": "space-between",
                },
                Object {
                  "borderBottomColor": "#dbdbdb",
                  "borderBottomWidth": 1,
                  "borderStyle": "solid",
                  "borderTopColor": "#dbdbdb",
                  "borderTopWidth": 1,
                },
              ]
        }
    >
        <View />
        <View>
            <Link
                onPress={[Function]}
                style={
                    Object {
                        "color": "#006699",
                        "fontFamily": "GillSansMTStd-Medium",
                        "fontSize": 14,
                      }
                }
                url="./2"
            >
                <NextPageIcon
                    label="Next"
                />
            </Link>
        </View>
    </View>
</View>,
  "nodes": Array [
    <View
      onLayout={[Function]}
      style={
            Object {
                  "alignItems": "stretch",
                  "flexDirection": "column",
                }
      }
>
      <View
            style={
                  Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "height": 40,
                          "justifyContent": "space-between",
                        },
                        Object {
                          "justifyContent": "center",
                        },
                        null,
                      ]
            }
      >
            <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                        Array [
                              Object {
                                "color": "#696969",
                                "fontFamily": "GillSansMTStd-Medium",
                                "fontSize": 15,
                              },
                            ]
                  }
            >
                  Showing 1 - 20 of 41 results
            </Text>
      </View>
      <View
            style={
                  Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "height": 40,
                          "justifyContent": "space-between",
                        },
                        Object {
                          "borderBottomColor": "#dbdbdb",
                          "borderBottomWidth": 1,
                          "borderStyle": "solid",
                          "borderTopColor": "#dbdbdb",
                          "borderTopWidth": 1,
                        },
                      ]
            }
      >
            <View />
            <View>
                  <Link
                        onPress={[Function]}
                        style={
                              Object {
                                    "color": "#006699",
                                    "fontFamily": "GillSansMTStd-Medium",
                                    "fontSize": 14,
                                  }
                        }
                        url="./2"
                  >
                        <NextPageIcon
                              label="Next"
                        />
                  </Link>
            </View>
      </View>
</View>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Pagination
        count={41}
        generatePageLink={[Function]}
        hideResults={false}
        onNext={[Function]}
        onPrev={[Function]}
        page={1}
        pageSize={20}
/>,
      "_debugID": 9,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Pagination {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "handleLayout": [Function],
        "props": Object {
          "count": 41,
          "generatePageLink": [Function],
          "hideResults": false,
          "onNext": [Function],
          "onPrev": [Function],
          "page": 1,
          "pageSize": 20,
        },
        "refs": Object {},
        "state": Object {
          "absolutePosition": false,
          "count": 41,
          "generatePageLink": [Function],
          "hideResults": false,
          "onNext": [Function],
          "onPrev": [Function],
          "page": 1,
          "pageSize": 20,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 5,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <View
          onLayout={[Function]}
          style={
                    Object {
                              "alignItems": "stretch",
                              "flexDirection": "column",
                            }
          }
>
          <View
                    style={
                              Array [
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "height": 40,
                                          "justifyContent": "space-between",
                                        },
                                        Object {
                                          "justifyContent": "center",
                                        },
                                        null,
                                      ]
                    }
          >
                    <Text
                              accessible={true}
                              allowFontScaling={true}
                              ellipsizeMode="tail"
                              style={
                                        Array [
                                                  Object {
                                                    "color": "#696969",
                                                    "fontFamily": "GillSansMTStd-Medium",
                                                    "fontSize": 15,
                                                  },
                                                ]
                              }
                    >
                              Showing 1 - 20 of 41 results
                    </Text>
          </View>
          <View
                    style={
                              Array [
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "height": 40,
                                          "justifyContent": "space-between",
                                        },
                                        Object {
                                          "borderBottomColor": "#dbdbdb",
                                          "borderBottomWidth": 1,
                                          "borderStyle": "solid",
                                          "borderTopColor": "#dbdbdb",
                                          "borderTopWidth": 1,
                                        },
                                      ]
                    }
          >
                    <View />
                    <View>
                              <Link
                                        onPress={[Function]}
                                        style={
                                                  Object {
                                                            "color": "#006699",
                                                            "fontFamily": "GillSansMTStd-Medium",
                                                            "fontSize": 14,
                                                          }
                                        }
                                        url="./2"
                              >
                                        <NextPageIcon
                                                  label="Next"
                                        />
                              </Link>
                    </View>
          </View>
</View>,
        "_debugID": 10,
        "_renderedOutput": <View
          onLayout={[Function]}
          style={
                    Object {
                              "alignItems": "stretch",
                              "flexDirection": "column",
                            }
          }
>
          <View
                    style={
                              Array [
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "height": 40,
                                          "justifyContent": "space-between",
                                        },
                                        Object {
                                          "justifyContent": "center",
                                        },
                                        null,
                                      ]
                    }
          >
                    <Text
                              accessible={true}
                              allowFontScaling={true}
                              ellipsizeMode="tail"
                              style={
                                        Array [
                                                  Object {
                                                    "color": "#696969",
                                                    "fontFamily": "GillSansMTStd-Medium",
                                                    "fontSize": 15,
                                                  },
                                                ]
                              }
                    >
                              Showing 1 - 20 of 41 results
                    </Text>
          </View>
          <View
                    style={
                              Array [
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "height": 40,
                                          "justifyContent": "space-between",
                                        },
                                        Object {
                                          "borderBottomColor": "#dbdbdb",
                                          "borderBottomWidth": 1,
                                          "borderStyle": "solid",
                                          "borderTopColor": "#dbdbdb",
                                          "borderTopWidth": 1,
                                        },
                                      ]
                    }
          >
                    <View />
                    <View>
                              <Link
                                        onPress={[Function]}
                                        style={
                                                  Object {
                                                            "color": "#006699",
                                                            "fontFamily": "GillSansMTStd-Medium",
                                                            "fontSize": 14,
                                                          }
                                        }
                                        url="./2"
                              >
                                        <NextPageIcon
                                                  label="Next"
                                        />
                              </Link>
                    </View>
          </View>
</View>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Pagination
    count={41}
    generatePageLink={[Function]}
    hideResults={false}
    onNext={[Function]}
    onPrev={[Function]}
    page={1}
    pageSize={20}
/>,
}
`;

exports[`Pagination Native renders with hidden results above breakpoint 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <View
    onLayout={[Function]}
    style={
        Object {
            "alignItems": "stretch",
            "flexDirection": "column",
          }
    }
>
    <View
        style={
            Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "height": 40,
                  "justifyContent": "space-between",
                },
                Object {
                  "borderBottomColor": "#dbdbdb",
                  "borderBottomWidth": 1,
                  "borderStyle": "solid",
                  "borderTopColor": "#dbdbdb",
                  "borderTopWidth": 1,
                },
              ]
        }
    >
        <View />
        <View>
            <Link
                onPress={[Function]}
                style={
                    Object {
                        "color": "#006699",
                        "fontFamily": "GillSansMTStd-Medium",
                        "fontSize": 14,
                      }
                }
                url="./2"
            >
                <NextPageIcon
                    label="Next"
                />
            </Link>
        </View>
    </View>
</View>,
  "nodes": Array [
    <View
      onLayout={[Function]}
      style={
            Object {
                  "alignItems": "stretch",
                  "flexDirection": "column",
                }
      }
>
      <View
            style={
                  Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "height": 40,
                          "justifyContent": "space-between",
                        },
                        Object {
                          "borderBottomColor": "#dbdbdb",
                          "borderBottomWidth": 1,
                          "borderStyle": "solid",
                          "borderTopColor": "#dbdbdb",
                          "borderTopWidth": 1,
                        },
                      ]
            }
      >
            <View />
            <View>
                  <Link
                        onPress={[Function]}
                        style={
                              Object {
                                    "color": "#006699",
                                    "fontFamily": "GillSansMTStd-Medium",
                                    "fontSize": 14,
                                  }
                        }
                        url="./2"
                  >
                        <NextPageIcon
                              label="Next"
                        />
                  </Link>
            </View>
      </View>
</View>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Pagination
        count={21}
        generatePageLink={[Function]}
        hideResults={false}
        onNext={[Function]}
        onPrev={[Function]}
        page={1}
        pageSize={20}
/>,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Pagination {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "handleLayout": [Function],
        "props": Object {
          "count": 21,
          "generatePageLink": [Function],
          "hideResults": false,
          "onNext": [Function],
          "onPrev": [Function],
          "page": 1,
          "pageSize": 20,
        },
        "refs": Object {},
        "state": Object {
          "absolutePosition": false,
          "count": 21,
          "generatePageLink": [Function],
          "hideResults": true,
          "onNext": [Function],
          "onPrev": [Function],
          "page": 1,
          "pageSize": 20,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <View
          onLayout={[Function]}
          style={
                    Object {
                              "alignItems": "stretch",
                              "flexDirection": "column",
                            }
          }
>
          <View
                    style={
                              Array [
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "height": 40,
                                          "justifyContent": "space-between",
                                        },
                                        Object {
                                          "borderBottomColor": "#dbdbdb",
                                          "borderBottomWidth": 1,
                                          "borderStyle": "solid",
                                          "borderTopColor": "#dbdbdb",
                                          "borderTopWidth": 1,
                                        },
                                      ]
                    }
          >
                    <View />
                    <View>
                              <Link
                                        onPress={[Function]}
                                        style={
                                                  Object {
                                                            "color": "#006699",
                                                            "fontFamily": "GillSansMTStd-Medium",
                                                            "fontSize": 14,
                                                          }
                                        }
                                        url="./2"
                              >
                                        <NextPageIcon
                                                  label="Next"
                                        />
                              </Link>
                    </View>
          </View>
</View>,
        "_debugID": 4,
        "_renderedOutput": <View
          onLayout={[Function]}
          style={
                    Object {
                              "alignItems": "stretch",
                              "flexDirection": "column",
                            }
          }
>
          <View
                    style={
                              Array [
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "height": 40,
                                          "justifyContent": "space-between",
                                        },
                                        Object {
                                          "borderBottomColor": "#dbdbdb",
                                          "borderBottomWidth": 1,
                                          "borderStyle": "solid",
                                          "borderTopColor": "#dbdbdb",
                                          "borderTopWidth": 1,
                                        },
                                      ]
                    }
          >
                    <View />
                    <View>
                              <Link
                                        onPress={[Function]}
                                        style={
                                                  Object {
                                                            "color": "#006699",
                                                            "fontFamily": "GillSansMTStd-Medium",
                                                            "fontSize": 14,
                                                          }
                                        }
                                        url="./2"
                              >
                                        <NextPageIcon
                                                  label="Next"
                                        />
                              </Link>
                    </View>
          </View>
</View>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Pagination
    count={21}
    generatePageLink={[Function]}
    hideResults={false}
    onNext={[Function]}
    onPrev={[Function]}
    page={1}
    pageSize={20}
/>,
}
`;
