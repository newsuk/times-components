// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`card with default layout 1`] = `
.c0 {
  border: 0px solid black;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin: 0px;
  min-height: 0px;
  min-width: 0px;
  padding: 0px;
  position: relative;
  z-index: 0;
}

.c4 {
  border: 0px solid black;
  box-sizing: border-box;
  color: rgb(0,0,0);
  display: inline;
  font: 14px system-ui,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Ubuntu,"Helvetica Neue",sans-serif;
  margin: 0px;
  padding: 0px;
  white-space: pre-wrap;
  overflow-wrap: break-word;
}

.c1 {
  display: block;
  opacity: 0;
  position: absolute;
  -webkit-transition: opacity 0.3s ease-in-out;
  transition: opacity 0.3s ease-in-out;
  width: 100%;
  z-index: 2;
}

.c2 {
  display: block;
  opacity: 1;
  position: absolute;
  -webkit-transition: opacity 0.3s ease-in-out;
  transition: opacity 0.3s ease-in-out;
  width: 100%;
  z-index: 1;
}

.c3 {
  border: 0px solid black;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin: 0px;
  min-height: 0px;
  min-width: 0px;
  padding: 0px;
  position: relative;
  z-index: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  margin-bottom: 0;
  min-width: 100%;
}

<style>
.IS1 {
  max-width: 25%;
  max-height: 50%;
}

.IS2 {
  max-width: 25%;
  max-height: 50%;
}

.IS3 {
  align-items: center;
  background-color: #EDEDED;
  bottom: 0;
  justify-content: center;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: 0;
  border-radius: 0;
}

.IS4 {
  align-items: center;
  background-color: #EDEDED;
  bottom: 0;
  justify-content: center;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: 0;
  border-radius: 0;
}

.IS5 {
  align-items: center;
  background-color: #EDEDED;
  bottom: 0;
  justify-content: center;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: 0;
  border-radius: 0;
}

.IS6 {
  padding-bottom: 150%;
}

.IS7 {
  align-items: flex-start;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: flex-end;
}

.IS8 {
  align-items: flex-start;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: flex-end;
}

.IS9 {
  align-items: flex-start;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: flex-end;
}
</style>

<tc-view__TcView
  className="IS9"
  data-adam-test="item2"
>
  <StyledComponent
    className="IS8"
    data-adam-test="item2"
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "tc-view__TcView-nuazoi-0",
          "isStatic": true,
          "lastClassName": "c0",
          "rules": Array [
            "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
          ],
        },
        "displayName": "tc-view__TcView",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "tc-view__TcView-nuazoi-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <div
      className="c0 IS7"
      data-adam-test="item2"
    >
      <tc-view__TcView
        className=""
        data-adam-test="item1"
        styles={
          Object {
            "flex": 1,
            "marginBottom": "10px",
            "minWidth": "100%",
          }
        }
      >
        <StyledComponent
          className=""
          data-adam-test="item1"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "tc-view__TcView-nuazoi-0",
                "isStatic": true,
                "lastClassName": "c0",
                "rules": Array [
                  "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
                ],
              },
              "displayName": "tc-view__TcView",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "tc-view__TcView-nuazoi-0",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          styles={
            Object {
              "flex": 1,
              "marginBottom": "10px",
              "minWidth": "100%",
            }
          }
        >
          <div
            className="c0"
            data-adam-test="item1"
          >
            <TimesImage
              aspectRatio={0.6666666666666666}
              disablePlaceholder={false}
              fadeImageIn={false}
              highResSize={100}
              lowResQuality={null}
              lowResSize={50}
              rounded={false}
              uri="https://img.io/img"
            />
          </div>
        </StyledComponent>
      </tc-view__TcView>
      <card-content__TcCardContainer
        className=""
        data-adam-test="item3"
        styles={
          Object {
            "flex": 1,
            "marginBottom": 0,
            "minWidth": "100%",
          }
        }
      >
        <StyledComponent
          className=""
          data-adam-test="item3"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "card-content__TcCardContainer-sc-1w0wvq8-0",
                "isStatic": false,
                "lastClassName": "c3",
                "rules": Array [
                  "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
                  [Function],
                  ";",
                ],
              },
              "displayName": "card-content__TcCardContainer",
              "foldedComponentIds": Array [
                "tc-view__TcView-nuazoi-0",
              ],
              "render": [Function],
              "styledComponentId": "card-content__TcCardContainer-sc-1w0wvq8-0",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          styles={
            Object {
              "flex": 1,
              "marginBottom": 0,
              "minWidth": "100%",
            }
          }
        >
          <div
            className="c3"
            data-adam-test="item3"
          >
            <tc-text__TcText>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "tc-text__TcText-sc-15igzev-0",
                      "isStatic": true,
                      "lastClassName": "c4",
                      "rules": Array [
                        "border:0px solid black;box-sizing:border-box;color:rgb(0,0,0);display:inline;font:14px system-ui,-apple-system,BlinkMacSystemFont,\\"Segoe UI\\",Roboto,Ubuntu,\\"Helvetica Neue\\",sans-serif;margin:0px;padding:0px;white-space:pre-wrap;overflow-wrap:break-word;",
                      ],
                    },
                    "displayName": "tc-text__TcText",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "tc-text__TcText-sc-15igzev-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c4"
                >
                  A card
                </div>
              </StyledComponent>
            </tc-text__TcText>
          </div>
        </StyledComponent>
      </card-content__TcCardContainer>
    </div>
  </StyledComponent>
</tc-view__TcView>
`;
