// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`1. card default state 1`] = `
<tc-view__TcView>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "tc-view__TcView-nuazoi-0",
          "isStatic": true,
          "lastClassName": "fPjBcr",
          "rules": Array [
            "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
          ],
        },
        "displayName": "tc-view__TcView",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "tc-view__TcView-nuazoi-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <div>
      <tc-view__TcView>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "tc-view__TcView-nuazoi-0",
                "isStatic": true,
                "lastClassName": "fPjBcr",
                "rules": Array [
                  "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
                ],
              },
              "displayName": "tc-view__TcView",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "tc-view__TcView-nuazoi-0",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div>
            <TimesImage
              aspectRatio={0.6666666666666666}
              disablePlaceholder={false}
              fadeImageIn={false}
              highResSize={360}
              isLcpItem={false}
              lowResQuality={null}
              lowResSize={50}
              rounded={false}
              uri="https://img.io/img"
            />
          </div>
        </StyledComponent>
      </tc-view__TcView>
      <card-content__TcCardContainer
        styles={
          Object {
            "flex": 1,
            "marginBottom": 0,
            "minWidth": "100%",
          }
        }
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "card-content__TcCardContainer-sc-1w0wvq8-0",
                "isStatic": false,
                "lastClassName": "hzpWKJ",
                "rules": Array [
                  "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
                  [Function],
                  ";",
                ],
              },
              "displayName": "card-content__TcCardContainer",
              "foldedComponentIds": Array [
                "tc-view__TcView-nuazoi-0",
              ],
              "render": [Function],
              "styledComponentId": "card-content__TcCardContainer-sc-1w0wvq8-0",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          styles={
            Object {
              "flex": 1,
              "marginBottom": 0,
              "minWidth": "100%",
            }
          }
        >
          <div>
            <tc-text__TcText>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "tc-text__TcText-sc-15igzev-0",
                      "isStatic": true,
                      "lastClassName": "lhcAkf",
                      "rules": Array [
                        "border:0px solid black;box-sizing:border-box;color:rgb(0,0,0);display:inline;font:14px system-ui,-apple-system,BlinkMacSystemFont,\\"Segoe UI\\",Roboto,Ubuntu,\\"Helvetica Neue\\",sans-serif;margin:0px;padding:0px;white-space:pre-wrap;overflow-wrap:break-word;",
                      ],
                    },
                    "displayName": "tc-text__TcText",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "tc-text__TcText-sc-15igzev-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div>
                  A card
                </div>
              </StyledComponent>
            </tc-text__TcText>
          </div>
        </StyledComponent>
      </card-content__TcCardContainer>
    </div>
  </StyledComponent>
</tc-view__TcView>
`;

exports[`2. pass an empty state to the image component 1`] = `
<tc-view__TcView>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "tc-view__TcView-nuazoi-0",
          "isStatic": true,
          "lastClassName": "fPjBcr",
          "rules": Array [
            "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
          ],
        },
        "displayName": "tc-view__TcView",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "tc-view__TcView-nuazoi-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <div>
      <tc-view__TcView>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "tc-view__TcView-nuazoi-0",
                "isStatic": true,
                "lastClassName": "fPjBcr",
                "rules": Array [
                  "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
                ],
              },
              "displayName": "tc-view__TcView",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "tc-view__TcView-nuazoi-0",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div>
            <TimesImage
              aspectRatio={0.6666666666666666}
              disablePlaceholder={false}
              fadeImageIn={false}
              highResSize={360}
              isLcpItem={false}
              lowResQuality={null}
              lowResSize={50}
              rounded={false}
              uri={null}
            />
          </div>
        </StyledComponent>
      </tc-view__TcView>
      <card-content__TcCardContainer
        styles={
          Object {
            "flex": 1,
            "marginBottom": 0,
            "minWidth": "100%",
          }
        }
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "card-content__TcCardContainer-sc-1w0wvq8-0",
                "isStatic": false,
                "lastClassName": "hzpWKJ",
                "rules": Array [
                  "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
                  [Function],
                  ";",
                ],
              },
              "displayName": "card-content__TcCardContainer",
              "foldedComponentIds": Array [
                "tc-view__TcView-nuazoi-0",
              ],
              "render": [Function],
              "styledComponentId": "card-content__TcCardContainer-sc-1w0wvq8-0",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          styles={
            Object {
              "flex": 1,
              "marginBottom": 0,
              "minWidth": "100%",
            }
          }
        >
          <div>
            <tc-text__TcText>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "tc-text__TcText-sc-15igzev-0",
                      "isStatic": true,
                      "lastClassName": "lhcAkf",
                      "rules": Array [
                        "border:0px solid black;box-sizing:border-box;color:rgb(0,0,0);display:inline;font:14px system-ui,-apple-system,BlinkMacSystemFont,\\"Segoe UI\\",Roboto,Ubuntu,\\"Helvetica Neue\\",sans-serif;margin:0px;padding:0px;white-space:pre-wrap;overflow-wrap:break-word;",
                      ],
                    },
                    "displayName": "tc-text__TcText",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "tc-text__TcText-sc-15igzev-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div>
                  A card with an empty image
                </div>
              </StyledComponent>
            </tc-text__TcText>
          </div>
        </StyledComponent>
      </card-content__TcCardContainer>
    </div>
  </StyledComponent>
</tc-view__TcView>
`;

exports[`3. card without an image when showimage is false 1`] = `
<tc-view__TcView>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "tc-view__TcView-nuazoi-0",
          "isStatic": true,
          "lastClassName": "fPjBcr",
          "rules": Array [
            "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
          ],
        },
        "displayName": "tc-view__TcView",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "tc-view__TcView-nuazoi-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <div>
      <card-content__TcCardContainer
        styles={
          Object {
            "flex": 1,
            "marginBottom": 0,
            "minWidth": "100%",
          }
        }
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "card-content__TcCardContainer-sc-1w0wvq8-0",
                "isStatic": false,
                "lastClassName": "hzpWKJ",
                "rules": Array [
                  "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
                  [Function],
                  ";",
                ],
              },
              "displayName": "card-content__TcCardContainer",
              "foldedComponentIds": Array [
                "tc-view__TcView-nuazoi-0",
              ],
              "render": [Function],
              "styledComponentId": "card-content__TcCardContainer-sc-1w0wvq8-0",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          styles={
            Object {
              "flex": 1,
              "marginBottom": 0,
              "minWidth": "100%",
            }
          }
        >
          <div>
            <tc-text__TcText>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "tc-text__TcText-sc-15igzev-0",
                      "isStatic": true,
                      "lastClassName": "lhcAkf",
                      "rules": Array [
                        "border:0px solid black;box-sizing:border-box;color:rgb(0,0,0);display:inline;font:14px system-ui,-apple-system,BlinkMacSystemFont,\\"Segoe UI\\",Roboto,Ubuntu,\\"Helvetica Neue\\",sans-serif;margin:0px;padding:0px;white-space:pre-wrap;overflow-wrap:break-word;",
                      ],
                    },
                    "displayName": "tc-text__TcText",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "tc-text__TcText-sc-15igzev-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div>
                  No image
                </div>
              </StyledComponent>
            </tc-text__TcText>
          </div>
        </StyledComponent>
      </card-content__TcCardContainer>
    </div>
  </StyledComponent>
</tc-view__TcView>
`;

exports[`4. pass an empty state to the image component when the uri is null 1`] = `
<tc-view__TcView>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "tc-view__TcView-nuazoi-0",
          "isStatic": true,
          "lastClassName": "fPjBcr",
          "rules": Array [
            "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
          ],
        },
        "displayName": "tc-view__TcView",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "tc-view__TcView-nuazoi-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <div>
      <tc-view__TcView>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "tc-view__TcView-nuazoi-0",
                "isStatic": true,
                "lastClassName": "fPjBcr",
                "rules": Array [
                  "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
                ],
              },
              "displayName": "tc-view__TcView",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "tc-view__TcView-nuazoi-0",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div>
            <TimesImage
              aspectRatio={0.6666666666666666}
              disablePlaceholder={false}
              fadeImageIn={false}
              highResSize={360}
              isLcpItem={false}
              lowResQuality={null}
              lowResSize={50}
              rounded={false}
              uri={null}
            />
          </div>
        </StyledComponent>
      </tc-view__TcView>
      <card-content__TcCardContainer
        styles={
          Object {
            "flex": 1,
            "marginBottom": 0,
            "minWidth": "100%",
          }
        }
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "card-content__TcCardContainer-sc-1w0wvq8-0",
                "isStatic": false,
                "lastClassName": "hzpWKJ",
                "rules": Array [
                  "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
                  [Function],
                  ";",
                ],
              },
              "displayName": "card-content__TcCardContainer",
              "foldedComponentIds": Array [
                "tc-view__TcView-nuazoi-0",
              ],
              "render": [Function],
              "styledComponentId": "card-content__TcCardContainer-sc-1w0wvq8-0",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          styles={
            Object {
              "flex": 1,
              "marginBottom": 0,
              "minWidth": "100%",
            }
          }
        >
          <div>
            <tc-text__TcText>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "tc-text__TcText-sc-15igzev-0",
                      "isStatic": true,
                      "lastClassName": "lhcAkf",
                      "rules": Array [
                        "border:0px solid black;box-sizing:border-box;color:rgb(0,0,0);display:inline;font:14px system-ui,-apple-system,BlinkMacSystemFont,\\"Segoe UI\\",Roboto,Ubuntu,\\"Helvetica Neue\\",sans-serif;margin:0px;padding:0px;white-space:pre-wrap;overflow-wrap:break-word;",
                      ],
                    },
                    "displayName": "tc-text__TcText",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "tc-text__TcText-sc-15igzev-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div>
                  No URI
                </div>
              </StyledComponent>
            </tc-text__TcText>
          </div>
        </StyledComponent>
      </card-content__TcCardContainer>
    </div>
  </StyledComponent>
</tc-view__TcView>
`;

exports[`5. card with reversed layout 1`] = `
<tc-view__TcView>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "tc-view__TcView-nuazoi-0",
          "isStatic": true,
          "lastClassName": "fPjBcr",
          "rules": Array [
            "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
          ],
        },
        "displayName": "tc-view__TcView",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "tc-view__TcView-nuazoi-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <div>
      <card-content__TcCardContainer
        styles={
          Object {
            "flex": 1,
            "marginBottom": "10px",
            "minWidth": "100%",
          }
        }
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "card-content__TcCardContainer-sc-1w0wvq8-0",
                "isStatic": false,
                "lastClassName": "bxratz",
                "rules": Array [
                  "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
                  [Function],
                  ";",
                ],
              },
              "displayName": "card-content__TcCardContainer",
              "foldedComponentIds": Array [
                "tc-view__TcView-nuazoi-0",
              ],
              "render": [Function],
              "styledComponentId": "card-content__TcCardContainer-sc-1w0wvq8-0",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          styles={
            Object {
              "flex": 1,
              "marginBottom": "10px",
              "minWidth": "100%",
            }
          }
        >
          <div>
            <tc-text__TcText>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "tc-text__TcText-sc-15igzev-0",
                      "isStatic": true,
                      "lastClassName": "lhcAkf",
                      "rules": Array [
                        "border:0px solid black;box-sizing:border-box;color:rgb(0,0,0);display:inline;font:14px system-ui,-apple-system,BlinkMacSystemFont,\\"Segoe UI\\",Roboto,Ubuntu,\\"Helvetica Neue\\",sans-serif;margin:0px;padding:0px;white-space:pre-wrap;overflow-wrap:break-word;",
                      ],
                    },
                    "displayName": "tc-text__TcText",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "tc-text__TcText-sc-15igzev-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div>
                  A card in reverse
                </div>
              </StyledComponent>
            </tc-text__TcText>
          </div>
        </StyledComponent>
      </card-content__TcCardContainer>
      <tc-view__TcView>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "tc-view__TcView-nuazoi-0",
                "isStatic": true,
                "lastClassName": "fPjBcr",
                "rules": Array [
                  "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
                ],
              },
              "displayName": "tc-view__TcView",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "tc-view__TcView-nuazoi-0",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div>
            <TimesImage
              aspectRatio={0.6666666666666666}
              disablePlaceholder={false}
              fadeImageIn={false}
              highResSize={360}
              isLcpItem={false}
              lowResQuality={null}
              lowResSize={50}
              rounded={false}
              uri="https://img.io/img"
            />
          </div>
        </StyledComponent>
      </tc-view__TcView>
    </div>
  </StyledComponent>
</tc-view__TcView>
`;

exports[`6. card with reversed layout and no image 1`] = `
<tc-view__TcView>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "tc-view__TcView-nuazoi-0",
          "isStatic": true,
          "lastClassName": "fPjBcr",
          "rules": Array [
            "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
          ],
        },
        "displayName": "tc-view__TcView",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "tc-view__TcView-nuazoi-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <div>
      <card-content__TcCardContainer
        styles={
          Object {
            "flex": 1,
            "marginBottom": "10px",
            "minWidth": "100%",
          }
        }
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "card-content__TcCardContainer-sc-1w0wvq8-0",
                "isStatic": false,
                "lastClassName": "bxratz",
                "rules": Array [
                  "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
                  [Function],
                  ";",
                ],
              },
              "displayName": "card-content__TcCardContainer",
              "foldedComponentIds": Array [
                "tc-view__TcView-nuazoi-0",
              ],
              "render": [Function],
              "styledComponentId": "card-content__TcCardContainer-sc-1w0wvq8-0",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          styles={
            Object {
              "flex": 1,
              "marginBottom": "10px",
              "minWidth": "100%",
            }
          }
        >
          <div>
            <tc-text__TcText>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "tc-text__TcText-sc-15igzev-0",
                      "isStatic": true,
                      "lastClassName": "lhcAkf",
                      "rules": Array [
                        "border:0px solid black;box-sizing:border-box;color:rgb(0,0,0);display:inline;font:14px system-ui,-apple-system,BlinkMacSystemFont,\\"Segoe UI\\",Roboto,Ubuntu,\\"Helvetica Neue\\",sans-serif;margin:0px;padding:0px;white-space:pre-wrap;overflow-wrap:break-word;",
                      ],
                    },
                    "displayName": "tc-text__TcText",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "tc-text__TcText-sc-15igzev-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div>
                  A card in reverse with no image
                </div>
              </StyledComponent>
            </tc-text__TcText>
          </div>
        </StyledComponent>
      </card-content__TcCardContainer>
    </div>
  </StyledComponent>
</tc-view__TcView>
`;

exports[`7. card with a loading state 1`] = `
<Animations__FadeIn>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Animations__FadeIn-w31u4-0",
          "isStatic": false,
          "lastClassName": "ejSuos",
          "rules": Array [
            "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:",
            [Function],
            ";border-bottom-color:",
            [Function],
            ";border-bottom-width:",
            [Function],
            ";border-radius:",
            [Function],
            ";overflow:",
            [Function],
            ";height:",
            [Function],
            ";width:",
            [Function],
            ";margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
            "animation:",
            Keyframes {
              "id": "sc-keyframes-eMLfYp",
              "inject": [Function],
              "name": "eMLfYp",
              "rules": Array [
                "@-webkit-keyframes eMLfYp{from{opacity:0;}to{opacity:1;}}",
                "@keyframes eMLfYp{from{opacity:0;}to{opacity:1;}}",
              ],
              "toString": [Function],
            },
            " 0.3s ease-in-out;",
          ],
        },
        "displayName": "Animations__FadeIn",
        "foldedComponentIds": Array [
          "TsTcView-sc-154dp5w-0",
        ],
        "render": [Function],
        "styledComponentId": "Animations__FadeIn-w31u4-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <div>
      <tc-view__TcView>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "tc-view__TcView-nuazoi-0",
                "isStatic": true,
                "lastClassName": "fPjBcr",
                "rules": Array [
                  "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
                ],
              },
              "displayName": "tc-view__TcView",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "tc-view__TcView-nuazoi-0",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div>
            <tc-view__TcView>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "tc-view__TcView-nuazoi-0",
                      "isStatic": true,
                      "lastClassName": "fPjBcr",
                      "rules": Array [
                        "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
                      ],
                    },
                    "displayName": "tc-view__TcView",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "tc-view__TcView-nuazoi-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div>
                  <TimesImage
                    aspectRatio={0.6666666666666666}
                    disablePlaceholder={false}
                    fadeImageIn={false}
                    highResSize={360}
                    isLcpItem={false}
                    lowResQuality={null}
                    lowResSize={50}
                    rounded={false}
                    uri="https://img.io/img"
                  />
                </div>
              </StyledComponent>
            </tc-view__TcView>
            <card-content__TcCardContainer
              styles={
                Object {
                  "flex": 1,
                  "marginBottom": 0,
                  "minHeight": 84,
                  "minWidth": "100%",
                }
              }
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "card-content__TcCardContainer-sc-1w0wvq8-0",
                      "isStatic": false,
                      "lastClassName": "fGmfWj",
                      "rules": Array [
                        "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
                        [Function],
                        ";",
                      ],
                    },
                    "displayName": "card-content__TcCardContainer",
                    "foldedComponentIds": Array [
                      "tc-view__TcView-nuazoi-0",
                    ],
                    "render": [Function],
                    "styledComponentId": "card-content__TcCardContainer-sc-1w0wvq8-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                styles={
                  Object {
                    "flex": 1,
                    "marginBottom": 0,
                    "minHeight": 84,
                    "minWidth": "100%",
                  }
                }
              >
                <div>
                  <_default>
                    <Gradient
                      degrees={264}
                      endPoint="1"
                      startPoint="0"
                    />
                    <Gradient
                      degrees={267}
                      endPoint="1"
                      startPoint="0"
                    />
                    <Gradient
                      degrees={267}
                      endPoint="1"
                      startPoint="0"
                    />
                    <Gradient
                      degrees={267}
                      endPoint="1"
                      startPoint="0"
                    />
                  </_default>
                </div>
              </StyledComponent>
            </card-content__TcCardContainer>
          </div>
        </StyledComponent>
      </tc-view__TcView>
    </div>
  </StyledComponent>
</Animations__FadeIn>
`;

exports[`8. card with a loading state and no image 1`] = `
<Animations__FadeIn>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Animations__FadeIn-w31u4-0",
          "isStatic": false,
          "lastClassName": "ejSuos",
          "rules": Array [
            "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:",
            [Function],
            ";border-bottom-color:",
            [Function],
            ";border-bottom-width:",
            [Function],
            ";border-radius:",
            [Function],
            ";overflow:",
            [Function],
            ";height:",
            [Function],
            ";width:",
            [Function],
            ";margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
            "animation:",
            Keyframes {
              "id": "sc-keyframes-eMLfYp",
              "inject": [Function],
              "name": "eMLfYp",
              "rules": Array [
                "@-webkit-keyframes eMLfYp{from{opacity:0;}to{opacity:1;}}",
                "@keyframes eMLfYp{from{opacity:0;}to{opacity:1;}}",
              ],
              "toString": [Function],
            },
            " 0.3s ease-in-out;",
          ],
        },
        "displayName": "Animations__FadeIn",
        "foldedComponentIds": Array [
          "TsTcView-sc-154dp5w-0",
        ],
        "render": [Function],
        "styledComponentId": "Animations__FadeIn-w31u4-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <div>
      <tc-view__TcView>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "tc-view__TcView-nuazoi-0",
                "isStatic": true,
                "lastClassName": "fPjBcr",
                "rules": Array [
                  "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
                ],
              },
              "displayName": "tc-view__TcView",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "tc-view__TcView-nuazoi-0",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div>
            <card-content__TcCardContainer
              styles={
                Object {
                  "flex": 1,
                  "marginBottom": 0,
                  "minHeight": 84,
                  "minWidth": "100%",
                }
              }
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "card-content__TcCardContainer-sc-1w0wvq8-0",
                      "isStatic": false,
                      "lastClassName": "fGmfWj",
                      "rules": Array [
                        "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
                        [Function],
                        ";",
                      ],
                    },
                    "displayName": "card-content__TcCardContainer",
                    "foldedComponentIds": Array [
                      "tc-view__TcView-nuazoi-0",
                    ],
                    "render": [Function],
                    "styledComponentId": "card-content__TcCardContainer-sc-1w0wvq8-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                styles={
                  Object {
                    "flex": 1,
                    "marginBottom": 0,
                    "minHeight": 84,
                    "minWidth": "100%",
                  }
                }
              >
                <div>
                  <_default>
                    <Gradient
                      degrees={264}
                      endPoint="1"
                      startPoint="0"
                    />
                    <Gradient
                      degrees={267}
                      endPoint="1"
                      startPoint="0"
                    />
                    <Gradient
                      degrees={267}
                      endPoint="1"
                      startPoint="0"
                    />
                    <Gradient
                      degrees={267}
                      endPoint="1"
                      startPoint="0"
                    />
                  </_default>
                </div>
              </StyledComponent>
            </card-content__TcCardContainer>
          </div>
        </StyledComponent>
      </tc-view__TcView>
    </div>
  </StyledComponent>
</Animations__FadeIn>
`;

exports[`9. card with reversed loading state 1`] = `
<Animations__FadeIn>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Animations__FadeIn-w31u4-0",
          "isStatic": false,
          "lastClassName": "ejSuos",
          "rules": Array [
            "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:",
            [Function],
            ";border-bottom-color:",
            [Function],
            ";border-bottom-width:",
            [Function],
            ";border-radius:",
            [Function],
            ";overflow:",
            [Function],
            ";height:",
            [Function],
            ";width:",
            [Function],
            ";margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
            "animation:",
            Keyframes {
              "id": "sc-keyframes-eMLfYp",
              "inject": [Function],
              "name": "eMLfYp",
              "rules": Array [
                "@-webkit-keyframes eMLfYp{from{opacity:0;}to{opacity:1;}}",
                "@keyframes eMLfYp{from{opacity:0;}to{opacity:1;}}",
              ],
              "toString": [Function],
            },
            " 0.3s ease-in-out;",
          ],
        },
        "displayName": "Animations__FadeIn",
        "foldedComponentIds": Array [
          "TsTcView-sc-154dp5w-0",
        ],
        "render": [Function],
        "styledComponentId": "Animations__FadeIn-w31u4-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <div>
      <tc-view__TcView>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "tc-view__TcView-nuazoi-0",
                "isStatic": true,
                "lastClassName": "fPjBcr",
                "rules": Array [
                  "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
                ],
              },
              "displayName": "tc-view__TcView",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "tc-view__TcView-nuazoi-0",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div>
            <card-content__TcCardContainer
              styles={
                Object {
                  "flex": 1,
                  "marginBottom": "10px",
                  "minHeight": 84,
                  "minWidth": "100%",
                }
              }
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "card-content__TcCardContainer-sc-1w0wvq8-0",
                      "isStatic": false,
                      "lastClassName": "evpgfy",
                      "rules": Array [
                        "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
                        [Function],
                        ";",
                      ],
                    },
                    "displayName": "card-content__TcCardContainer",
                    "foldedComponentIds": Array [
                      "tc-view__TcView-nuazoi-0",
                    ],
                    "render": [Function],
                    "styledComponentId": "card-content__TcCardContainer-sc-1w0wvq8-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                styles={
                  Object {
                    "flex": 1,
                    "marginBottom": "10px",
                    "minHeight": 84,
                    "minWidth": "100%",
                  }
                }
              >
                <div>
                  <_default>
                    <Gradient
                      degrees={264}
                      endPoint="1"
                      startPoint="0"
                    />
                    <Gradient
                      degrees={267}
                      endPoint="1"
                      startPoint="0"
                    />
                    <Gradient
                      degrees={267}
                      endPoint="1"
                      startPoint="0"
                    />
                    <Gradient
                      degrees={267}
                      endPoint="1"
                      startPoint="0"
                    />
                  </_default>
                </div>
              </StyledComponent>
            </card-content__TcCardContainer>
            <tc-view__TcView>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "tc-view__TcView-nuazoi-0",
                      "isStatic": true,
                      "lastClassName": "fPjBcr",
                      "rules": Array [
                        "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
                      ],
                    },
                    "displayName": "tc-view__TcView",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "tc-view__TcView-nuazoi-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div>
                  <TimesImage
                    aspectRatio={0.6666666666666666}
                    disablePlaceholder={false}
                    fadeImageIn={false}
                    highResSize={360}
                    isLcpItem={false}
                    lowResQuality={null}
                    lowResSize={50}
                    rounded={false}
                    uri="https://img.io/img"
                  />
                </div>
              </StyledComponent>
            </tc-view__TcView>
          </div>
        </StyledComponent>
      </tc-view__TcView>
    </div>
  </StyledComponent>
</Animations__FadeIn>
`;

exports[`10. card with reversed loading state with no image 1`] = `
<Animations__FadeIn>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Animations__FadeIn-w31u4-0",
          "isStatic": false,
          "lastClassName": "ejSuos",
          "rules": Array [
            "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:",
            [Function],
            ";border-bottom-color:",
            [Function],
            ";border-bottom-width:",
            [Function],
            ";border-radius:",
            [Function],
            ";overflow:",
            [Function],
            ";height:",
            [Function],
            ";width:",
            [Function],
            ";margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
            "animation:",
            Keyframes {
              "id": "sc-keyframes-eMLfYp",
              "inject": [Function],
              "name": "eMLfYp",
              "rules": Array [
                "@-webkit-keyframes eMLfYp{from{opacity:0;}to{opacity:1;}}",
                "@keyframes eMLfYp{from{opacity:0;}to{opacity:1;}}",
              ],
              "toString": [Function],
            },
            " 0.3s ease-in-out;",
          ],
        },
        "displayName": "Animations__FadeIn",
        "foldedComponentIds": Array [
          "TsTcView-sc-154dp5w-0",
        ],
        "render": [Function],
        "styledComponentId": "Animations__FadeIn-w31u4-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <div>
      <tc-view__TcView>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "tc-view__TcView-nuazoi-0",
                "isStatic": true,
                "lastClassName": "fPjBcr",
                "rules": Array [
                  "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
                ],
              },
              "displayName": "tc-view__TcView",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "tc-view__TcView-nuazoi-0",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div>
            <card-content__TcCardContainer
              styles={
                Object {
                  "flex": 1,
                  "marginBottom": "10px",
                  "minHeight": 84,
                  "minWidth": "100%",
                }
              }
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "card-content__TcCardContainer-sc-1w0wvq8-0",
                      "isStatic": false,
                      "lastClassName": "evpgfy",
                      "rules": Array [
                        "border:0px solid black;box-sizing:border-box;display:flex;flex-direction:column;margin:0px;min-height:0px;min-width:0px;padding:0px;position:relative;z-index:0;",
                        [Function],
                        ";",
                      ],
                    },
                    "displayName": "card-content__TcCardContainer",
                    "foldedComponentIds": Array [
                      "tc-view__TcView-nuazoi-0",
                    ],
                    "render": [Function],
                    "styledComponentId": "card-content__TcCardContainer-sc-1w0wvq8-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                styles={
                  Object {
                    "flex": 1,
                    "marginBottom": "10px",
                    "minHeight": 84,
                    "minWidth": "100%",
                  }
                }
              >
                <div>
                  <_default>
                    <Gradient
                      degrees={264}
                      endPoint="1"
                      startPoint="0"
                    />
                    <Gradient
                      degrees={267}
                      endPoint="1"
                      startPoint="0"
                    />
                    <Gradient
                      degrees={267}
                      endPoint="1"
                      startPoint="0"
                    />
                    <Gradient
                      degrees={267}
                      endPoint="1"
                      startPoint="0"
                    />
                  </_default>
                </div>
              </StyledComponent>
            </card-content__TcCardContainer>
          </div>
        </StyledComponent>
      </tc-view__TcView>
    </div>
  </StyledComponent>
</Animations__FadeIn>
`;

exports[`11. card should not re-render when imageratio prop is changed 1`] = `
<div>
  <div>
    <div>
      <div>
        <img
          src="https://img.io/img?resize=360"
        />
        <img
          src="https://img.io/img?resize=50"
        />
        <div
          height="100%"
          width="100%"
        >
          <svg
            height="auto"
            version="1.1"
            viewBox="145 50 108 120"
            width="100%"
          >
            <g
              fill="none"
              fillRule="evenodd"
              stroke="none"
              strokeWidth="1"
            >
              <path
                d="M211.26076,54 L211.231367,54 L147.67512,54 L145,85.7081465 L146.922096,86.4489102 C146.922096,86.4489102 164.867589,68.1355181 168.301115,65.0001546 C171.728017,61.8689133 174.237132,61.0885763 176.436179,60.3527593 C180.998206,59.169681 185.977937,59.2150255 185.977937,59.2150255 L186.109581,59.2150255 L186.109581,156.560932 L169.259886,164.473953 L169.259886,166 L228.735147,166 L228.735147,164.473953 L211.889177,156.560932 L211.889177,59.2150255 L212.01751,59.2150255 C212.01751,59.2150255 216.992272,59.169681 221.558854,60.3527593 C223.757072,61.0885763 226.266601,61.8689133 229.691848,65.0001546 C233.130341,68.1355181 251.071695,86.4489102 251.071695,86.4489102 L253,85.7081465 L250.317842,54 L211.270695,54 L211.242545,54"
                fill="#FFFFFF"
              />
            </g>
          </svg>
        </div>
      </div>
    </div>
  </div>
  <div>
    <div>
      Do not re-render me
    </div>
  </div>
</div>
`;

exports[`11. card should not re-render when imageratio prop is changed 2`] = `
<div>
  <div>
    <div>
      <div>
        <img
          src="https://img.io/img?resize=360"
        />
        <img
          src="https://img.io/img?resize=50"
        />
        <div
          height="100%"
          width="100%"
        >
          <svg
            height="auto"
            version="1.1"
            viewBox="145 50 108 120"
            width="100%"
          >
            <g
              fill="none"
              fillRule="evenodd"
              stroke="none"
              strokeWidth="1"
            >
              <path
                d="M211.26076,54 L211.231367,54 L147.67512,54 L145,85.7081465 L146.922096,86.4489102 C146.922096,86.4489102 164.867589,68.1355181 168.301115,65.0001546 C171.728017,61.8689133 174.237132,61.0885763 176.436179,60.3527593 C180.998206,59.169681 185.977937,59.2150255 185.977937,59.2150255 L186.109581,59.2150255 L186.109581,156.560932 L169.259886,164.473953 L169.259886,166 L228.735147,166 L228.735147,164.473953 L211.889177,156.560932 L211.889177,59.2150255 L212.01751,59.2150255 C212.01751,59.2150255 216.992272,59.169681 221.558854,60.3527593 C223.757072,61.0885763 226.266601,61.8689133 229.691848,65.0001546 C233.130341,68.1355181 251.071695,86.4489102 251.071695,86.4489102 L253,85.7081465 L250.317842,54 L211.270695,54 L211.242545,54"
                fill="#FFFFFF"
              />
            </g>
          </svg>
        </div>
      </div>
    </div>
  </div>
  <div>
    <div>
      Do not re-render me
    </div>
  </div>
</div>
`;

exports[`12. card should re-render when image uri changes 1`] = `
<div>
  <div>
    <div>
      <div>
        <img
          src="https://img.io/img?resize=360"
        />
        <img
          src="https://img.io/img?resize=50"
        />
        <div
          height="100%"
          width="100%"
        >
          <svg
            height="auto"
            version="1.1"
            viewBox="145 50 108 120"
            width="100%"
          >
            <g
              fill="none"
              fillRule="evenodd"
              stroke="none"
              strokeWidth="1"
            >
              <path
                d="M211.26076,54 L211.231367,54 L147.67512,54 L145,85.7081465 L146.922096,86.4489102 C146.922096,86.4489102 164.867589,68.1355181 168.301115,65.0001546 C171.728017,61.8689133 174.237132,61.0885763 176.436179,60.3527593 C180.998206,59.169681 185.977937,59.2150255 185.977937,59.2150255 L186.109581,59.2150255 L186.109581,156.560932 L169.259886,164.473953 L169.259886,166 L228.735147,166 L228.735147,164.473953 L211.889177,156.560932 L211.889177,59.2150255 L212.01751,59.2150255 C212.01751,59.2150255 216.992272,59.169681 221.558854,60.3527593 C223.757072,61.0885763 226.266601,61.8689133 229.691848,65.0001546 C233.130341,68.1355181 251.071695,86.4489102 251.071695,86.4489102 L253,85.7081465 L250.317842,54 L211.270695,54 L211.242545,54"
                fill="#FFFFFF"
              />
            </g>
          </svg>
        </div>
      </div>
    </div>
  </div>
  <div>
    <div>
      Some text
    </div>
  </div>
</div>
`;

exports[`12. card should re-render when image uri changes 2`] = `
<div>
  <div>
    <div>
      <div>
        <img
          src="http://foo?resize=360"
        />
        <img
          src="http://foo?resize=50"
        />
        <div
          height="100%"
          width="100%"
        >
          <svg
            height="auto"
            version="1.1"
            viewBox="145 50 108 120"
            width="100%"
          >
            <g
              fill="none"
              fillRule="evenodd"
              stroke="none"
              strokeWidth="1"
            >
              <path
                d="M211.26076,54 L211.231367,54 L147.67512,54 L145,85.7081465 L146.922096,86.4489102 C146.922096,86.4489102 164.867589,68.1355181 168.301115,65.0001546 C171.728017,61.8689133 174.237132,61.0885763 176.436179,60.3527593 C180.998206,59.169681 185.977937,59.2150255 185.977937,59.2150255 L186.109581,59.2150255 L186.109581,156.560932 L169.259886,164.473953 L169.259886,166 L228.735147,166 L228.735147,164.473953 L211.889177,156.560932 L211.889177,59.2150255 L212.01751,59.2150255 C212.01751,59.2150255 216.992272,59.169681 221.558854,60.3527593 C223.757072,61.0885763 226.266601,61.8689133 229.691848,65.0001546 C233.130341,68.1355181 251.071695,86.4489102 251.071695,86.4489102 L253,85.7081465 L250.317842,54 L211.270695,54 L211.242545,54"
                fill="#FFFFFF"
              />
            </g>
          </svg>
        </div>
      </div>
    </div>
  </div>
  <div>
    <div>
      Some text
    </div>
  </div>
</div>
`;

exports[`13. card should re-render when low res size changes 1`] = `
<div>
  <div>
    <div>
      <div>
        <img
          src="https://img.io/img?resize=360"
        />
        <img
          src="https://img.io/img?resize=50"
        />
        <div
          height="100%"
          width="100%"
        >
          <svg
            height="auto"
            version="1.1"
            viewBox="145 50 108 120"
            width="100%"
          >
            <g
              fill="none"
              fillRule="evenodd"
              stroke="none"
              strokeWidth="1"
            >
              <path
                d="M211.26076,54 L211.231367,54 L147.67512,54 L145,85.7081465 L146.922096,86.4489102 C146.922096,86.4489102 164.867589,68.1355181 168.301115,65.0001546 C171.728017,61.8689133 174.237132,61.0885763 176.436179,60.3527593 C180.998206,59.169681 185.977937,59.2150255 185.977937,59.2150255 L186.109581,59.2150255 L186.109581,156.560932 L169.259886,164.473953 L169.259886,166 L228.735147,166 L228.735147,164.473953 L211.889177,156.560932 L211.889177,59.2150255 L212.01751,59.2150255 C212.01751,59.2150255 216.992272,59.169681 221.558854,60.3527593 C223.757072,61.0885763 226.266601,61.8689133 229.691848,65.0001546 C233.130341,68.1355181 251.071695,86.4489102 251.071695,86.4489102 L253,85.7081465 L250.317842,54 L211.270695,54 L211.242545,54"
                fill="#FFFFFF"
              />
            </g>
          </svg>
        </div>
      </div>
    </div>
  </div>
  <div>
    <div>
      Some content
    </div>
  </div>
</div>
`;

exports[`13. card should re-render when low res size changes 2`] = `
<div>
  <div>
    <div>
      <div>
        <img
          src="https://img.io/img?resize=360"
        />
        <div
          height="100%"
          width="100%"
        >
          <svg
            height="auto"
            version="1.1"
            viewBox="145 50 108 120"
            width="100%"
          >
            <g
              fill="none"
              fillRule="evenodd"
              stroke="none"
              strokeWidth="1"
            >
              <path
                d="M211.26076,54 L211.231367,54 L147.67512,54 L145,85.7081465 L146.922096,86.4489102 C146.922096,86.4489102 164.867589,68.1355181 168.301115,65.0001546 C171.728017,61.8689133 174.237132,61.0885763 176.436179,60.3527593 C180.998206,59.169681 185.977937,59.2150255 185.977937,59.2150255 L186.109581,59.2150255 L186.109581,156.560932 L169.259886,164.473953 L169.259886,166 L228.735147,166 L228.735147,164.473953 L211.889177,156.560932 L211.889177,59.2150255 L212.01751,59.2150255 C212.01751,59.2150255 216.992272,59.169681 221.558854,60.3527593 C223.757072,61.0885763 226.266601,61.8689133 229.691848,65.0001546 C233.130341,68.1355181 251.071695,86.4489102 251.071695,86.4489102 L253,85.7081465 L250.317842,54 L211.270695,54 L211.242545,54"
                fill="#FFFFFF"
              />
            </g>
          </svg>
        </div>
      </div>
    </div>
  </div>
  <div>
    <div>
      Some content
    </div>
  </div>
</div>
`;

exports[`14. card should re-render when high res size changes 1`] = `
<div>
  <div>
    <div>
      <div>
        <img
          src="https://img.io/img?resize=360"
        />
        <img
          src="https://img.io/img?resize=50"
        />
        <div
          height="100%"
          width="100%"
        >
          <svg
            height="auto"
            version="1.1"
            viewBox="145 50 108 120"
            width="100%"
          >
            <g
              fill="none"
              fillRule="evenodd"
              stroke="none"
              strokeWidth="1"
            >
              <path
                d="M211.26076,54 L211.231367,54 L147.67512,54 L145,85.7081465 L146.922096,86.4489102 C146.922096,86.4489102 164.867589,68.1355181 168.301115,65.0001546 C171.728017,61.8689133 174.237132,61.0885763 176.436179,60.3527593 C180.998206,59.169681 185.977937,59.2150255 185.977937,59.2150255 L186.109581,59.2150255 L186.109581,156.560932 L169.259886,164.473953 L169.259886,166 L228.735147,166 L228.735147,164.473953 L211.889177,156.560932 L211.889177,59.2150255 L212.01751,59.2150255 C212.01751,59.2150255 216.992272,59.169681 221.558854,60.3527593 C223.757072,61.0885763 226.266601,61.8689133 229.691848,65.0001546 C233.130341,68.1355181 251.071695,86.4489102 251.071695,86.4489102 L253,85.7081465 L250.317842,54 L211.270695,54 L211.242545,54"
                fill="#FFFFFF"
              />
            </g>
          </svg>
        </div>
      </div>
    </div>
  </div>
  <div>
    <div>
      Some content
    </div>
  </div>
</div>
`;

exports[`14. card should re-render when high res size changes 2`] = `
<div>
  <div>
    <div>
      <div>
        <img
          src="https://img.io/img?resize=50"
        />
        <div
          height="100%"
          width="100%"
        >
          <svg
            height="auto"
            version="1.1"
            viewBox="145 50 108 120"
            width="100%"
          >
            <g
              fill="none"
              fillRule="evenodd"
              stroke="none"
              strokeWidth="1"
            >
              <path
                d="M211.26076,54 L211.231367,54 L147.67512,54 L145,85.7081465 L146.922096,86.4489102 C146.922096,86.4489102 164.867589,68.1355181 168.301115,65.0001546 C171.728017,61.8689133 174.237132,61.0885763 176.436179,60.3527593 C180.998206,59.169681 185.977937,59.2150255 185.977937,59.2150255 L186.109581,59.2150255 L186.109581,156.560932 L169.259886,164.473953 L169.259886,166 L228.735147,166 L228.735147,164.473953 L211.889177,156.560932 L211.889177,59.2150255 L212.01751,59.2150255 C212.01751,59.2150255 216.992272,59.169681 221.558854,60.3527593 C223.757072,61.0885763 226.266601,61.8689133 229.691848,65.0001546 C233.130341,68.1355181 251.071695,86.4489102 251.071695,86.4489102 L253,85.7081465 L250.317842,54 L211.270695,54 L211.242545,54"
                fill="#FFFFFF"
              />
            </g>
          </svg>
        </div>
      </div>
    </div>
  </div>
  <div>
    <div>
      Some content
    </div>
  </div>
</div>
`;

exports[`15. card should re-render when loading state changes 1`] = `
<div>
  <div>
    <div>
      <div>
        <div>
          <img
            src="https://img.io/img?resize=360"
          />
          <img
            src="https://img.io/img?resize=50"
          />
          <div
            height="100%"
            width="100%"
          >
            <svg
              height="auto"
              version="1.1"
              viewBox="145 50 108 120"
              width="100%"
            >
              <g
                fill="none"
                fillRule="evenodd"
                stroke="none"
                strokeWidth="1"
              >
                <path
                  d="M211.26076,54 L211.231367,54 L147.67512,54 L145,85.7081465 L146.922096,86.4489102 C146.922096,86.4489102 164.867589,68.1355181 168.301115,65.0001546 C171.728017,61.8689133 174.237132,61.0885763 176.436179,60.3527593 C180.998206,59.169681 185.977937,59.2150255 185.977937,59.2150255 L186.109581,59.2150255 L186.109581,156.560932 L169.259886,164.473953 L169.259886,166 L228.735147,166 L228.735147,164.473953 L211.889177,156.560932 L211.889177,59.2150255 L212.01751,59.2150255 C212.01751,59.2150255 216.992272,59.169681 221.558854,60.3527593 C223.757072,61.0885763 226.266601,61.8689133 229.691848,65.0001546 C233.130341,68.1355181 251.071695,86.4489102 251.071695,86.4489102 L253,85.7081465 L250.317842,54 L211.270695,54 L211.242545,54"
                  fill="#FFFFFF"
                />
              </g>
            </svg>
          </div>
        </div>
      </div>
    </div>
    <div>
      <div />
      <div />
      <div />
      <div />
    </div>
  </div>
</div>
`;

exports[`15. card should re-render when loading state changes 2`] = `
<div>
  <div>
    <div>
      <div>
        <img
          src="https://img.io/img?resize=360"
        />
        <img
          src="https://img.io/img?resize=50"
        />
        <div
          height="100%"
          width="100%"
        >
          <svg
            height="auto"
            version="1.1"
            viewBox="145 50 108 120"
            width="100%"
          >
            <g
              fill="none"
              fillRule="evenodd"
              stroke="none"
              strokeWidth="1"
            >
              <path
                d="M211.26076,54 L211.231367,54 L147.67512,54 L145,85.7081465 L146.922096,86.4489102 C146.922096,86.4489102 164.867589,68.1355181 168.301115,65.0001546 C171.728017,61.8689133 174.237132,61.0885763 176.436179,60.3527593 C180.998206,59.169681 185.977937,59.2150255 185.977937,59.2150255 L186.109581,59.2150255 L186.109581,156.560932 L169.259886,164.473953 L169.259886,166 L228.735147,166 L228.735147,164.473953 L211.889177,156.560932 L211.889177,59.2150255 L212.01751,59.2150255 C212.01751,59.2150255 216.992272,59.169681 221.558854,60.3527593 C223.757072,61.0885763 226.266601,61.8689133 229.691848,65.0001546 C233.130341,68.1355181 251.071695,86.4489102 251.071695,86.4489102 L253,85.7081465 L250.317842,54 L211.270695,54 L211.242545,54"
                fill="#FFFFFF"
              />
            </g>
          </svg>
        </div>
      </div>
    </div>
  </div>
  <div>
    <div>
      Re-render me
    </div>
  </div>
</div>
`;
