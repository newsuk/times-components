// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders loading image when width set 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Placeholder
    style={null}
    uri=""
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Gradient
        degrees={264}
        style={
                Object {
                        "flex": 1,
                      }
        }
>
        <View
                style={
                        Array [
                                Object {
                                  "flex": 1,
                                },
                                Object {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                },
                              ]
                }
        >
                <T
                        height={45}
                        width={45}
                />
        </View>
</Gradient>,
      "onLayout": [Function],
      "style": Array [
        Object {
          "flex": 1,
        },
        null,
      ],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <View
          style={
                    Array [
                              Object {
                                "flex": 1,
                              },
                              Object {
                                "alignItems": "center",
                                "justifyContent": "center",
                              },
                            ]
          }
>
          <T
                    height={45}
                    width={45}
          />
</View>,
        "degrees": 264,
        "style": Object {
          "flex": 1,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <T
            height={45}
            width={45}
/>,
          "style": Array [
            Object {
              "flex": 1,
            },
            Object {
              "alignItems": "center",
              "justifyContent": "center",
            },
          ],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "height": 45,
            "width": 45,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
placeholder.test.js.snap
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Gradient
          degrees={264}
          style={
                    Object {
                              "flex": 1,
                            }
          }
>
          <View
                    style={
                              Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "alignItems": "center",
                                          "justifyContent": "center",
                                        },
                                      ]
                    }
          >
                    <T
                              height={45}
                              width={45}
                    />
          </View>
</Gradient>,
        "onLayout": [Function],
        "style": Array [
          Object {
            "flex": 1,
          },
          null,
        ],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <View
            style={
                        Array [
                                    Object {
                                      "flex": 1,
                                    },
                                    Object {
                                      "alignItems": "center",
                                      "justifyContent": "center",
                                    },
                                  ]
            }
>
            <T
                        height={45}
                        width={45}
            />
</View>,
          "degrees": 264,
          "style": Object {
            "flex": 1,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <T
              height={45}
              width={45}
/>,
            "style": Array [
              Object {
                "flex": 1,
              },
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
            ],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "height": 45,
              "width": 45,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
