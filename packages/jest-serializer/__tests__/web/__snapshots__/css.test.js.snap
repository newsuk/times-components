// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The Web serializer should effect children 1`] = `
.c0 {
  border: 0px solid black;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin: 0px;
  min-height: 0px;
  min-width: 0px;
  padding: 0px;
  position: relative;
  z-index: 0;
}

.c1 {
  border: 0px solid black;
  box-sizing: border-box;
  color: rgb(0,0,0);
  display: inline;
  font: 14px system-ui,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto, Ubuntu,"Helvetica Neue",sans-serif;
  margin: 0px;
  padding: 0px;
  white-space: pre-wrap;
  overflow-wrap: break-word;
}

<div
  className="c0"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <div
    className="c1"
    style={
      Object {
        "fontSize": 9,
      }
    }
  >
    Hello World!
  </div>
</div>
`;

exports[`The Web serializer should effect multiple children 1`] = `
.c0 {
  border: 0px solid black;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin: 0px;
  min-height: 0px;
  min-width: 0px;
  padding: 0px;
  position: relative;
  z-index: 0;
}

.c1 {
  border: 0px solid black;
  box-sizing: border-box;
  color: rgb(0,0,0);
  display: inline;
  font: 14px system-ui,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto, Ubuntu,"Helvetica Neue",sans-serif;
  margin: 0px;
  padding: 0px;
  white-space: pre-wrap;
  overflow-wrap: break-word;
}

<div
  className="c0"
  style={
    Object {
      "backgroundColor": "red",
      "flex": 1,
    }
  }
>
  <div
    className="c1"
    style={
      Object {
        "fontSize": 9,
      }
    }
  >
    child 1
  </div>
  <div
    className="c1"
    style={
      Object {
        "fontSize": 10,
      }
    }
  >
    child 2
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      style={
        Object {
          "fontSize": 11,
        }
      }
    >
      child 3
    </div>
  </div>
</div>
`;

exports[`The Web serializer should effect render props 1`] = `
.c0 {
  border: 0px solid black;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin: 0px;
  min-height: 0px;
  min-width: 0px;
  padding: 0px;
  position: relative;
  z-index: 0;
}

<div
  className="c0"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <div
    className="c0"
  />
</div>
`;

exports[`The Web serializer should remove rnw-classnames and hoist the styles 1`] = `
.c0 {
  border: 0px solid black;
  box-sizing: border-box;
  color: rgb(0,0,0);
  display: inline;
  font: 14px system-ui,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto, Ubuntu,"Helvetica Neue",sans-serif;
  margin: 0px;
  padding: 0px;
  white-space: pre-wrap;
  overflow-wrap: break-word;
}

<div
  className="c0"
  style={
    Object {
      "color": "red",
      "flex": 1,
      "fontSize": 14,
    }
  }
/>
`;

exports[`The Web serializer should squash identical styles 1`] = `
.c0 {
  border: 0px solid black;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin: 0px;
  min-height: 0px;
  min-width: 0px;
  padding: 0px;
  position: relative;
  z-index: 0;
}

.c1 {
  border: 0px solid black;
  box-sizing: border-box;
  color: rgb(0,0,0);
  display: inline;
  font: 14px system-ui,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto, Ubuntu,"Helvetica Neue",sans-serif;
  margin: 0px;
  padding: 0px;
  white-space: pre-wrap;
  overflow-wrap: break-word;
}

<div
  className="c0"
  style={
    Object {
      "backgroundColor": "red",
      "flex": 1,
    }
  }
>
  <div
    className="c1"
    style={
      Object {
        "fontSize": 10,
      }
    }
  >
    child 1
  </div>
  <div
    className="c1"
    style={
      Object {
        "fontSize": 10,
      }
    }
  >
    child 2
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      style={
        Object {
          "fontSize": 10,
        }
      }
    >
      child 3
    </div>
  </div>
</div>
`;
