version: 2.1

executors:
    node:
        docker:
          - image: cimg/node:12.15.0-browsers
        resource_class: 2xlarge

commands:
    install-dependencies:
        description: 'Install Dependencies'
        steps:
            - run:
                  name: Install Dependencies
                  command: npx yarn@1.22.15 install --frozen-lockfile --ignore-engines
                  working_directory: ~/project/

    restore-yarn:
        description: 'Restore Yarn Package Cache'
        steps:
            - restore_cache:
                  key: yarn-packages-{{ checksum "yarn.lock" }}

    save-yarn:
        description: 'Save Yarn Package Cache'
        steps:
            - save_cache:
                  key: yarn-packages-{{ checksum "yarn.lock" }}
                  paths:
                      - ~/.cache/yarn
    install-fontforge:
        description: 'Install fontforge'
        steps:
            - run:
                  name: Install fontforge
                  command: |
                    sudo apt-get update;
                    sudo add-apt-repository ppa:fontforge/fontforge -y;
                    sudo apt-get install fontforge -y;

jobs:
    setup:
        executor: node
        steps:
            - checkout
            - install-fontforge
            - restore-yarn
            - install-dependencies
            - save-yarn
            - persist_to_workspace:
                root: ./
                paths:
                    - ./

    run_lint:
        executor: node
        steps:
            - checkout
            - attach_workspace:
                  at: ./
            - run:
                  name: Run Lint
                  command: |
                      npx yarn@1.22.15 lint
                  working_directory: ~/project/

    build_storybook:
        executor: node
        steps:
            - checkout
            - attach_workspace:
                  at: ./
            - run:
                  name: Run Tests
                  command: |
                      npx yarn@1.22.15 test
                  working_directory: ~/project/
            - store_artifacts:
                path: ./storybook-static
                destination: Storybook

    run_noplatform_tests:
        executor: node
        steps:
            - checkout
            - attach_workspace:
                  at: ./
            - run:
                  name: Run No Specific Platform Tests
                  command: |
                      npx lerna run test --stream --since -- -- --ci --bail --coverage
                  working_directory: ~/project/
    run_web_tests:
        executor: node
        steps:
            - checkout
            - attach_workspace:
                  at: ./
            - run:
                  name: Run Web Tests
                  command: |
                      npx lerna run test:web --stream --since -- -- --ci --bail --coverage
                  working_directory: ~/project/

    run_unit_tests:
        executor: node
        steps:
            - checkout
            - attach_workspace:
                  at: ./
            - run:
                  name: Run Unit Tests
                  command: |
                      npx lerna run test:unit --stream --since -- -- --ci --bail --coverage
                  working_directory: ~/project/

    run_cypress_tests:
        executor: node
        steps:
            - checkout
            - attach_workspace:
                  at: ./
            - run:
                  name: Install Cypress binary and dependencies
                  command: |
                    sudo apt-get update;
                    sudo apt-get install -y lsof;
                    sudo apt-get install --no-install-recommends -y libgtk2.0-0 libgtk-3-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
                    npx yarn@1.22.15 cypress install
                  working_directory: ~/project/
            - run:
                  name: Run Cypress Tests
                  command: |
                    npx yarn@1.22.15 test:e2e
                  working_directory: ~/project/
            - store_artifacts:
                path: packages/ssr/__tests__/screenshots
            - store_artifacts:
                path: packages/ssr/__tests__/snapshots

    publish_coverage:
        executor: node
        steps:
            - checkout
            - attach_workspace:
                  at: ./
            - run:
                  name: Publish coverage
                  command: |
                      export COVERALLS_GIT_COMMIT=$CIRCLE_SHA1
                      export COVERALLS_GIT_BRANCH=$CIRCLE_BRANCH
                      npx yarn@1.22.15 coverage:publish
                  working_directory: ~/project/

    publish_npm:
        executor: node
        steps:
            - checkout
            - attach_workspace:
                  at: ./
            - run:
                  name: Publish to npm
                  command: |
                      npx lerna run bundle --stream
                      npx yarn@1.22.15 npm:publish
                  working_directory: ~/project/

    publish_storybook:
        executor: node
        steps:
            - checkout
            - attach_workspace:
                  at: ./
            - run:
                  name: Publish Storybook
                  command: |
                      npx yarn@1.22.15 storybook:publish
                  working_directory: ~/project/

workflows:
    version: 2

    run_tests:
        jobs:
            - setup
            - run_lint:
                  requires:
                      - setup
            - build_storybook:
                  requires:
                      - setup
            - run_noplatform_tests:
                  requires:
                      - setup
            - run_web_tests:
                requires:
                  - setup
            - run_unit_tests:
                  requires:
                      - setup
            - run_cypress_tests:
                  requires:
                      - setup
            - publish_coverage:
                  requires:
                      - build_storybook
                      - run_lint
                      - run_noplatform_tests
                      - run_web_tests
                      - run_unit_tests
                      - run_cypress_tests
            - publish_storybook:
                  filters:
                    branches:
                        only:
                          - master
                  requires:
                      - build_storybook
                      - run_lint
                      - run_noplatform_tests
                      - run_web_tests
                      - run_unit_tests
                      - run_cypress_tests
            - publish_npm:
                  filters:
                    branches:
                        only:
                          - master
                  requires:
                      - build_storybook
                      - run_lint
                      - run_noplatform_tests
                      - run_web_tests
                      - run_unit_tests
                      - run_cypress_tests
