import groovy.json.JsonSlurper

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.1'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

def reactRepositoryPath = "$rootDir/repo"
def resPath = './xnative/src/main/res'
def graphQlFilesPath = './xnative/src/main/res/raw'
def valuesPath = './xnative/src/main/res/values'
def assetsPath = './xnative/src/main/assets'


allprojects {
    repositories {
        google()
        jcenter()

        maven {
            url "$reactRepositoryPath"
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
    delete graphQlFilesPath
    delete assetsPath
    delete valuesPath
    delete resPath
}


task removePreviousReactArchives(type: Delete) {
    delete reactRepositoryPath
}

task generateReactArchives {
    subprojects { subproject ->
        apply plugin: 'maven'
        def reactProjects = ["react-native-svg", "react-native-webview", "react-native-device-info"]

        if (reactProjects.contains(subproject.name)) {
            task generateReactArchive(type: Upload) {
                configuration = subproject.configurations.archives
                def jsonFile = file("$rootDir/../node_modules/$subproject.name/package.json")
                def packageJson = new JsonSlurper().parseText(jsonFile.text)
                repositories.mavenDeployer {
                    repository url: "file://${reactRepositoryPath}"

                    pom.project {
                        groupId 'react-repo'
                        artifactId subproject.name
                        version packageJson.version
                    }
                }
            }

            generateReactArchives.dependsOn(generateReactArchive)
        }
    }

    task reactNativeCopy(type: Copy) {
        from('../node_modules/react-native/android')
        into(reactRepositoryPath)
    }

    task valuesCopy(type: Copy) {
        from('./app/build/generated/res/resValues/release/values')
        into(valuesPath)
    }

    task bundleCopy(type: Copy) {
        from('./app/build/generated/assets/react/release')
        into(assetsPath)
    }

    task resCopy(type: Copy) {
        from('./app/build/generated/res/react/release')
        into(resPath)
    }

    //pack the graphql files in the xnative.aar library so they can be reused by the android app
    task gqlCopy(type: Copy) {
        from('../packages/provider-queries/src/')
        include "**/*.graphql"
        into(graphQlFilesPath)
    }

    valuesCopy.dependsOn(resCopy)
    bundleCopy.dependsOn(valuesCopy)
    gqlCopy.dependsOn(bundleCopy)
    removePreviousReactArchives.dependsOn(gqlCopy)
    reactNativeCopy.dependsOn(removePreviousReactArchives)
    generateReactArchives.dependsOn(reactNativeCopy)
}
